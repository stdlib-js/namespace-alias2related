{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport ALIAS_TO_RELATED from './../data/data.json';\n\n\n// MAIN //\n\n/**\n* Returns aliases related to a specified alias.\n*\n* @param {string} alias - alias\n* @throws {TypeError} must provide a string\n* @returns {(Array|StringArray|null)} related aliases\n*\n* @example\n* var v = alias2related( 'base.sin' );\n* // returns [...]\n*/\nfunction alias2related( alias ) {\n\tif ( !isString( alias ) ) {\n\t\tthrow new TypeError( format( '0LW3N', alias ) );\n\t}\n\tif ( hasOwnProp( ALIAS_TO_RELATED, alias ) ) {\n\t\treturn ALIAS_TO_RELATED[ alias ].slice();\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default alias2related;\n"],"names":["alias2related","alias","isString","TypeError","format","hasOwnProp","ALIAS_TO_RELATED","slice"],"mappings":";;81hKAyCA,SAASA,EAAeC,GACvB,IAAMC,EAAUD,GACf,MAAM,IAAIE,UAAWC,EAAQ,QAASH,IAEvC,OAAKI,EAAYC,EAAkBL,GAC3BK,EAAkBL,GAAQM,QAE3B,IACR"}